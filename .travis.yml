sudo: required

language: node_js

node_js:
  - 10.11.0

cache:
  directories:
    - node_modules

env:
  global:
    - BUILD_ZIP=build.zip

addons:
  apt:
    packages:
      # Update to the latest version of Docker Community Edition
      - docker-ce

services:
  - docker

before_install:
  # Install and update dependencies required for running on the CI environment
  - make ci-update

before_script:
  # Setup the CI environment and install required dependencies
  - make ci-setup

jobs:
  include:
    - stage: "Tests, Linting, and Build"
      # Run unit tests and generate code coverage reports
      name: "Unit tests"
      script: make ci-test
      # Run JavaScript linting
    - name: "JavaScript linting"
      script: make ci-scriptlint
      # Run stylesheet linting
    - name: "Stylesheet linting"
      script: make ci-stylelint
      # Create an optimized production build
    - name: "Production build tests"
      script: make ci-build

after_success:
  # Create code coverage data (LCOV format)
  - make ci-coverage

deploy:
  # Create deployment configuration and build a production image
  - on:
      branch: master
    provider: script
    script: make ci-deploy
    skip_cleanup: true
  # Deploy to a production server 1 (Heroku)
  - app:
      master: docker-playground-react
    api_key:
      secure: $HEROKU_API_KEY
    provider: heroku
    skip_cleanup: true
  # Deploy to a production server 2 (AWS Elastic Beanstalk)
  - access_key_id: $AWS_ACCESS_KEY
    app: "docker-playground"
    bucket_name: "elasticbeanstalk-ap-northeast-1-413973540256"
    bucket_path: "docker-playground"
    env: "docker-playground-env"
    on:
      branch: master
    provider: elasticbeanstalk
    region: "ap-northeast-1"
    secret_access_key:
      secure: $AWS_SECRET_KEY
    skip_cleanup: true
    zip_file: $BUILD_ZIP

after_script:
  # Send LCOV data to coveralls.io
  - make ci-coveralls
  # List images
  - docker image ls
  # List containers (including exited state)
  - docker container ls -a
  # List networks
  - docker network ls
  # List volumes
  - docker volume ls

notifications:
  # Default email notification settings
  email:
    on_failure: always
    on_success: change
  # Send notifications to Slack channels about build results
  slack:
    on_failure: always
    on_success: always
    rooms:
      - secure: "hs+eOloJTwJniTLoac740Bka6feXA7ud+ZSVaG2n0qV/3B3mOOL/MXmZGbTHOKP4dOGdEzGfM4UU7aRcZTcMUeGZbIURrT97yn3CgiUJeWJNL6RpvRjmYVL3T44dJTDjRPnFyJEL/mLTbyLC3yw9+yf1aKTo/T2d2oja5a2g1tKWsTyDcXxs15jPz4dIBMgTE/oBFjOc/KQYs2O7IanJgOUXW515QwCjXO/hp3kPqefpYflywoQCyBFsoeAjlMvCE9HiMLr0wRv+rTWdeymbfRQ9BpseulDxK3Z8tTiquugcOsLCOYZ5IpWDGhLL4euWMRJK6P6XYWSwx4XbGKnBiYbD9uiO8L+UebZTTa1XOfI1tDaHlEpc9eDvlxV/qAzJ8uKUZ+Fq38DnBA6eAUEikBu7W1ScuIBZD35TosOaXWQiBAmmIL463uyI7y8vHStrKAlfnPbA5/5X9vIRuzPiuFPeYLoUgdZoIcVQ2KEtkrQrIhDMHvxf0RVGdfTW3+b2c9MPjL+NurCvKxIGXggF/613cMyBEVbrlFq49teBzdxQP44+vB2NVapKM1rkeHUGQeuZKNm9r2AjiTDzow9MmXOOMjbNDV+lfuSr9t7U6K0qxLSR+E3duplL25fNAUKr4Ab19oyT0KIucihmnJXVrLdrJY+tPsb0gaKXwp5OW9M="

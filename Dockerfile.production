# Specify global variables
ARG BUILD_ENV=production
ARG NODE_VERSION
ARG NGINX_VERSION

# Build stage
# Initialize a new build stage and set the base image for production build
FROM node:${NODE_VERSION} as app

# Specify build and environment variables
ARG BUILD_ENV
ARG WORKDIR
ENV NODE_ENV=${BUILD_ENV}
ENV NPM_CONFIG_LOGLEVEL=warn

# Add metadata to an image
LABEL stage=intermediate

# Specify the working directory
WORKDIR ${WORKDIR}

# Install and update dependencies
COPY package.json yarn.lock ./
RUN yarn
RUN yarn cache clean

# Create an optimized production build
COPY . .
RUN yarn build

# ------------------------------------------------------------------------------

# Serve stage
# Initialize a new build stage and set the base image for production build
FROM nginx:${NGINX_VERSION}

# Specify build and environment variables
ARG BUILD_ENV
ARG WORKDIR
ENV NODE_ENV=${BUILD_ENV}

# Customize web server configuration
COPY ./config/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf

# Copy the optimized production build from the build stage for hosting SPA
COPY --from=app ${WORKDIR}/build /usr/share/nginx/html

# Specify network ports
EXPOSE 80

# Start a web server
ENTRYPOINT ["nginx", "-g", "daemon off;"]
